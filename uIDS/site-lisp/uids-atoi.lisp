(in-package posix)
(declare (visibility :private))

(defun uids-atoi-read-digit (s)
  (let ((digit (memory-read s)))
  (if (< digit ?a)
     (if (< digit ?A)
       (cast ptr_t (- digit ?0))
       (cast ptr_t (+ (- digit ?A) 10:8)))
     (cast ptr_t (+ (- digit (cast char ?a)) 10:8)))))

(defun uids-atoi (s)
  (declare (visibility :public) (external "atoi"))
  (uids-ocaml-debug 0xfabc0de)
  (let ((v 0))
    (while (and (> (cast ptr_t (memory-read s)) 0)
                (not (= (cast ptr_t (memory-read s)) 0xa)))
      (set v (+ (* v 10)  (atoi-read-digit s)))
      (incr s))
    (cast int v)))
